# Generated by Django 4.2.14 on 2024-08-02 07:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import licenses.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "executable",
                    models.FileField(blank=True, null=True, upload_to="executables/"),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("payment_link", models.URLField()),
                (
                    "description",
                    django_ckeditor_5.fields.CKEditor5Field(verbose_name="Text"),
                ),
                (
                    "image",
                    models.ImageField(
                        default="images/default.jpg", upload_to="images/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StringItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=200)),
                ("expiry_date", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        choices=[
                            ("general", "General Inquiry"),
                            ("technical", "Technical Support"),
                            ("billing", "Billing"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        max_length=50,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "attachments",
                    models.FileField(blank=True, null=True, upload_to="attachments/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unread", "Unread"),
                            ("read", "Read"),
                            ("answered", "Answered"),
                            ("closed", "Closed"),
                        ],
                        default="unread",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                (
                    "attachments",
                    models.FileField(blank=True, null=True, upload_to="attachments/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="licenses.ticket",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datetime", models.DateTimeField(auto_now_add=True)),
                ("chunks", models.JSONField(default=list)),
                (
                    "unique_id",
                    models.CharField(default=uuid.uuid4, max_length=100, unique=True),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="licenses.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reportslist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Receipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("receipt_image", models.ImageField(upload_to="receipts/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("verified", models.BooleanField(default=False)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="licenses.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublicMessageList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("string_items", models.ManyToManyField(to="licenses.stringitem")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductActivation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("activated", models.BooleanField(default=True)),
                ("url", models.CharField(max_length=255)),
                ("expiry_date", models.CharField(max_length=255)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="licenses.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrivateMessageList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("string_items", models.ManyToManyField(to="licenses.stringitem")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("payment_url", models.URLField(blank=True, null=True)),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("not_delivered", "Not Delivered"),
                            ("delivered", "Delivered"),
                        ],
                        default="not_delivered",
                        max_length=20,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="licenses.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InboxMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ea_username",
                    models.CharField(
                        blank=True,
                        default=licenses.models.generate_random_digits,
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "ea_password",
                    models.CharField(
                        blank=True,
                        default=licenses.models.generate_random_string,
                        max_length=100,
                        null=True,
                    ),
                ),
                ("referrer", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "referral_link",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                ("timezone", models.CharField(default="Asia/Tehran", max_length=100)),
                ("next_allowed_date", models.CharField(max_length=100)),
                (
                    "daily_drawdown",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "daily_trade_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "daily_profit_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_drawdown",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_profit_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("trade_delays", models.IntegerField(default=0)),
                ("update_periodic_limit", models.IntegerField(default=7)),
                ("last_update", models.CharField(default="1970-01-01", max_length=100)),
                ("daily_trade_limit_remaining_1", models.IntegerField(default=0)),
                (
                    "daily_profit_limit_remaining_1",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_drawdown_remaining_1",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_profit_limit_remaining_1",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("trade_delays_remaining_1", models.IntegerField(default=0)),
                (
                    "daily_drawdown_remaining_1",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("daily_trade_limit_remaining_2", models.IntegerField(default=0)),
                (
                    "daily_profit_limit_remaining_2",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_drawdown_remaining_2",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_profit_limit_remaining_2",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("trade_delays_remaining_2", models.IntegerField(default=0)),
                (
                    "daily_drawdown_remaining_2",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompilationRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_number", models.CharField(max_length=100)),
                (
                    "expiry_date",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "executable",
                    models.FileField(blank=True, null=True, upload_to="executables/"),
                ),
                ("fulfilled", models.BooleanField(default=False)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="licenses.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="APIUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("random_token", models.CharField(max_length=200)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"unique_together": {("user", "random_token")},},
        ),
    ]
